{"name":"MiB Beam Spot","tagline":"Milano Bicocca development and operations of CMS Beam Spot","body":"### What?\r\nThis is meant to be the code sharepoint for Milano Bicocca group venture on the CMS Beam Spot development and operations\r\n\r\n\r\n### Before you start\r\n* you must have a GitHub account. Follow the FAQ [here](http://cms-sw.github.io/faq.html)\r\n if in trouble\r\n* make sure your machine is acknowledged by GitHub [ssh key generation](https://help.github.com/articles/generating-ssh-keys/)\r\n* join MilanoBicocca-pix common github (ask Riccardo)\r\n* take [this gitconfig] (https://github.com/rmanzoni/tools/blob/master/mygitconfig), change user and email and put it into your ~/.gitconfig\r\n\r\n### Installation\r\n\r\nsetup area\r\n\r\n```\r\ncmsrel CMSSW_7_2_3\r\ncd src\r\n```\r\n\r\ninitialize a git repository\r\n\r\n```\r\ngit init\r\n```\r\n\r\nadd the common Milano Bicocca remote github repository you will push your changes here (not into your personal github!) pull requests into the official cmssw github will be made from the common github \r\n\r\n```\r\ngit remote add mib git@github.com:MilanoBicocca-pix/cmssw.git\r\n```\r\n\r\nadd also the official cmssw remote github, so that we can align from time to time\r\n\r\n```\r\ngit remote add official-cmssw git@github.com:cms-sw/cmssw.git\r\n```\r\n\r\ncheckout just what you need, not the full burden\r\n\r\n```\r\ngit config core.sparsecheckout true\r\necho RecoVertex/BeamSpotProducer >> .git/info/sparse-checkout\r\ngit pull mib <BRANCH>\r\n```\r\n\r\nnow you're up and running\r\n\r\n### Very minimal how to\r\n\r\nFirst, do your modifications, then the usual way to keep them on the record and to propagate them to everybody is\r\n\r\n1. git add FILE1 FILE2 ...\r\n2. git commit -m \"hey hey I saved the world today\" \r\n3. git push mib BRANCH\r\n\r\nnow, if our private mib BRANCH reached the point it worths being put into the official CMSSW  \r\n\r\n4. (after 1., 2. and 3.) do a pull request http://cms-sw.github.io/tutorial.html#do-a-pull-request\r\n\r\n### Tricks worth noting\r\nCheck the differences between your HEAD and a given branch\r\n\r\n```\r\ncd $CMSSW_BASE\r\ncmsenv\r\ngit fetch REMOTE_NAME\r\nfind RecoVertex/BeamSpotProducer/ -wholename 'RecoVertex/BeamSpotProducer/*/*.*' -type f | git diff REMOTE_NAME/BRANCH_TO_COMPARE_AGAINST --\r\n```\r\n\r\nCheck the differences between your HEAD and a given branch, but only display the names of the files that changed\r\n\r\n```\r\ngit diff --stat BRANCH_TO_COMPARE_AGAINST\r\n```\r\n\r\n### More extended git cheatsheet (in light of our scope)\r\nset architecture for 75X\r\n```\r\nsetenv SCRAM_ARCH slc6_amd64_gcc491\r\n```\r\n\r\ncreate the release\r\n```\r\ncmsrel CMSSW_7_5_X\r\ncd CMSSW_7_5_X\r\ncd src\r\n```\r\n\r\ninitialise a git repo\r\n```\r\ngit init\r\n```\r\n\r\ntell git what remote github repos you’ll be interested in\r\n```\r\ngit remote add cms-official git@github.com:cms-sw/cmssw.git             # official CMSSW repository (you can push changes here)\r\ngit remote ass mib          git@github.com:MilanoBicocca-pix/cmssw.git  # MiB common repository (you have full access rights)\r\n```\r\n\r\nnow you’ve got two remotes you can pull down from, cms-official and mib\r\n\r\nnow enable the sparse-checkout feature. You don’t want to have the whole wealth of CMSSW packages in your working directory, do you?\r\n```\r\ngit config core.sparsecheckout true\r\necho RecoVertex/BeamSpotProducer >> .git/info/sparse-checkout\r\n```\r\n\r\nnow pull down the branch you want to work on from the remote mib repository\r\n```\r\ngit pull mib BRANCH\r\n```\r\nside note 1: “git pull mib BRANCH” is effectively equivalent to `git fetch mib ; git merge BRANCH`\r\nside note 2: in case you already have something in your current branch, conflicts may happen. If you want to solve the conflicts, edit the conflicting files and commit them, then push. If you simply want to stop, cleanup and back off because you suspect you’re messing it up, then do `git merge —abort`\r\n\r\nnow you can do all the changes you want\r\n\r\ncheck if there’s any file you want to stage and, later commit\r\n```\r\ngit status\r\n```\r\n\r\nstage the files that will go into the next commit\r\n```\r\ngit add FILE1 FILE2\r\n```\r\n\r\nsuppose theres one file that you modified but you don’t want to stage nor commit\r\n```\r\ngit checkout —- FILE\r\n```\r\n\r\nnow you’re ready to commit, bear in mind that it’s a snapshot of the whole repo!\r\n```\r\ngit commit -m “my message”\r\n```\r\n\r\nif you want to start a new branch right from where you are now (first make sure your staging area is clean, aka `git status` should return clean)\r\n```\r\ngit checkout -b NEW_BRANCH # please note that NEW_BRANCH did not exist until now\r\n```\r\n\r\nto hop on and off a branch (as above, git status should return clean before you jump)\r\n```\r\ngit checkout BRANCH1\r\ngit checkout BRANCH2\r\n```\r\n\r\nsuppose you’re on `BRANCH1` and you want to wipe it clean and align it to some other branch `BRANCH_TO_ALIGN_TO`. Beware, you’re gonna loose all your mods!\r\n\r\n```\r\ngit reset —hard BRANCH_TO_ALIGN_TO\r\n```\r\n\r\nnow `git diff BRANCH_TO_ALIGN_TO` should return nothing, i.e. you forced `BRANCH1` to point to the exact commit `BRANCH_TO_ALIGN_TO` points to\r\n\r\nif you want to display all the branches you have available locally\r\n\r\n```\r\ngit branch -a\r\n```\r\n\r\nyou’ll notice that some of them look like `BRANCH` some others like `remotes/REMOTE/BRANCH`\r\nthe former are your local branches, whereas the latter are the branches that were available in the oven `REMOTE` \r\nfrozen at the time of your last `git fetch/pull REMOTE` you did. These get regularly update every `git fetch/pull REMOTE`\r\n\r\n### Authors and Contributors\r\n\r\nRiccardo Manzoni (@rmanzoni)  \r\nSara Fiorendi (@sarafiorendi)  \r\nSimone Gennai (@gennai)  \r\nMauro Dinardo (@dinardo)  \r\n\r\n### Support or Contact\r\nmanzoni AT cern DOT ch\r\n\r\n### About GitHub Pages\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}