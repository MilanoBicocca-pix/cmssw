import os
import datetime

#############################
##### Utility functions #####
#############################

# Change the lumis from string to list of ints
def getLSlist (stringLS):
    lista = stringLS.split(',')
    lista[0] = lista[0][1:]
    lista[-1] = lista[-1][:-1]
    lista = [int(x) for x in lista]
    return lista


##################################
##### LS and timestamp lists #####
##################################

timestampListScan1 = [
    # LSi - LSf -   TimeBegin -     TimeEnd
    [ 82,    84,   1501228894,   1501228922],
    [ 84,    85,   1501228932,   1501228961],
    [ 86,    87,   1501228972,   1501228999],
    [ 87,    89,   1501229009,   1501229039],
    [ 89,    90,   1501229049,   1501229076],
    [ 91,    92,   1501229087,   1501229116],
    [ 92,    94,   1501229124,   1501229154],
    [ 94,    95,   1501229164,   1501229193],
    [ 96,    97,   1501229202,   1501229231],
    [ 97,    99,   1501229241,   1501229269],
    [ 99,   100,   1501229279,   1501229308],
    [101,   102,   1501229318,   1501229346],
    [102,   104,   1501229356,   1501229385],
    [104,   105,   1501229395,   1501229423],
    [106,   107,   1501229433,   1501229461],
    [107,   108,   1501229471,   1501229500],
    [109,   110,   1501229511,   1501229538],
    [111,   112,   1501229548,   1501229578],
    [112,   113,   1501229588,   1501229615],
    [114,   115,   1501229626,   1501229655],
    [115,   117,   1501229664,   1501229693],
    [117,   118,   1501229703,   1501229732],
    [119,   120,   1501229741,   1501229770],
    [120,   122,   1501229780,   1501229808],
    [122,   123,   1501229818,   1501229838],
]

timestampListScan2 = [
    [135,  136,  1501230121,  1501230150],
    [137,  138,  1501230160,  1501230188],
    [138,  140,  1501230198,  1501230229],
    [140,  141,  1501230239,  1501230268],
    [142,  143,  1501230277,  1501230306],
    [143,  145,  1501230316,  1501230345],
    [145,  146,  1501230354,  1501230383],
    [147,  148,  1501230394,  1501230421],
    [148,  150,  1501230431,  1501230460],
    [150,  151,  1501230471,  1501230500],
    [152,  153,  1501230509,  1501230538],
    [153,  155,  1501230548,  1501230577],
    [155,  156,  1501230586,  1501230615],
    [157,  158,  1501230625,  1501230654],
    [158,  160,  1501230663,  1501230692],
    [160,  161,  1501230702,  1501230731],
    [162,  163,  1501230742,  1501230769],
    [163,  165,  1501230780,  1501230809],
    [165,  166,  1501230817,  1501230847],
    [167,  168,  1501230857,  1501230886],
    [168,  170,  1501230895,  1501230924],
    [170,  171,  1501230934,  1501230962],
    [172,  173,  1501230972,  1501231001],
    [173,  175,  1501231011,  1501231040],
    [175,  175,  1501231049,  1501231049],
]

timestampListScan3 = [
    [193,  194,  1501231474,  1501231502],
    [195,  196,  1501231512,  1501231542],
    [196,  198,  1501231552,  1501231579],
    [198,  199,  1501231590,  1501231619],
    [200,  201,  1501231629,  1501231657],
    [201,  203,  1501231667,  1501231696],
    [203,  204,  1501231706,  1501231734],
    [205,  206,  1501231744,  1501231773],
    [206,  208,  1501231783,  1501231811],
    [208,  209,  1501231821,  1501231850],
    [210,  211,  1501231861,  1501231888],
    [211,  213,  1501231899,  1501231928],
    [213,  214,  1501231936,  1501231966],
    [215,  216,  1501231976,  1501232005],
    [216,  218,  1501232014,  1501232043],
    [218,  219,  1501232053,  1501232082],
    [220,  221,  1501232091,  1501232120],
    [221,  223,  1501232130,  1501232159],
    [223,  224,  1501232168,  1501232197],
    [225,  226,  1501232207,  1501232236],
    [226,  227,  1501232245,  1501232274],
    [228,  229,  1501232285,  1501232312],
    [230,  231,  1501232322,  1501232352],
    [231,  232,  1501232362,  1501232390],
    [233,  234,  1501232400,  1501232420],
]

timestampListScan4 = [
    [249,  251,  1501232783,  1501232812],
    [251,  252,  1501232822,  1501232851],
    [253,  254,  1501232860,  1501232889],
    [254,  255,  1501232899,  1501232927],
    [256,  257,  1501232937,  1501232966],
    [258,  259,  1501232977,  1501233004],
    [259,  260,  1501233014,  1501233044],
    [261,  262,  1501233054,  1501233082],
    [263,  264,  1501233092,  1501233121],
    [264,  265,  1501233130,  1501233159],
    [266,  267,  1501233169,  1501233197],
    [267,  269,  1501233207,  1501233236],
    [269,  270,  1501233246,  1501233274],
    [271,  272,  1501233284,  1501233313],
    [272,  274,  1501233322,  1501233351],
    [274,  275,  1501233361,  1501233390],
    [276,  277,  1501233399,  1501233428],
    [277,  279,  1501233438,  1501233466],
    [279,  280,  1501233476,  1501233505],
    [281,  282,  1501233516,  1501233543],
    [282,  284,  1501233554,  1501233583],
    [284,  285,  1501233591,  1501233621],
    [286,  287,  1501233631,  1501233658],
    [287,  289,  1501233669,  1501233698],
    [289,  290,  1501233708,  1501233728],
]

timestampListScan5 = [
    [362,  364,  1501235405,  1501235450],
    [364,  366,  1501235464,  1501235507],
    [367,  369,  1501235520,  1501235566],
    [369,  371,  1501235579,  1501235622],
    [372,  374,  1501235636,  1501235679],
    [374,  376,  1501235692,  1501235736],
    [377,  378,  1501235749,  1501235794],
    [379,  381,  1501235806,  1501235851],
    [381,  383,  1501235863,  1501235908],
    [384,  386,  1501235920,  1501235965],
    [386,  388,  1501235976,  1501236022],
    [389,  391,  1501236033,  1501236078],
    [391,  393,  1501236090,  1501236135],
    [394,  396,  1501236147,  1501236192],
    [396,  398,  1501236204,  1501236249],
    [398,  400,  1501236261,  1501236306],
    [401,  403,  1501236317,  1501236362],
    [403,  405,  1501236376,  1501236419],
    [406,  407,  1501236432,  1501236451],
]

timestampListScan6 = [
    [422,  423,  1501236800,  1501236843],
    [424,  426,  1501236858,  1501236903],
    [427,  428,  1501236916,  1501236960],
    [429,  431,  1501236973,  1501237018],
    [432,  433,  1501237031,  1501237075],
    [434,  436,  1501237090,  1501237133],
    [436,  438,  1501237146,  1501237192],
    [439,  441,  1501237205,  1501237248],
    [441,  443,  1501237261,  1501237307],
    [444,  446,  1501237320,  1501237365],
    [446,  448,  1501237377,  1501237425],
    [449,  451,  1501237436,  1501237481],
    [451,  453,  1501237495,  1501237540],
    [454,  456,  1501237551,  1501237597],
    [456,  458,  1501237610,  1501237655],
    [459,  461,  1501237666,  1501237712],
    [461,  463,  1501237725,  1501237770],
    [464,  466,  1501237783,  1501237827],
    [466,  467,  1501237840,  1501237860],
]

timestampListScan7 = [
    [502,  504,  1501238673,  1501238718],
    [504,  506,  1501238730,  1501238775],
    [507,  509,  1501238788,  1501238834],
    [509,  511,  1501238845,  1501238890],
    [512,  514,  1501238903,  1501238947],
    [514,  516,  1501238960,  1501239005],
    [517,  519,  1501239019,  1501239062],
    [519,  521,  1501239075,  1501239121],
    [522,  524,  1501239134,  1501239177],
    [524,  526,  1501239190,  1501239236],
    [527,  529,  1501239249,  1501239292],
    [529,  531,  1501239306,  1501239351],
    [532,  533,  1501239364,  1501239408],
    [534,  536,  1501239421,  1501239466],
    [536,  538,  1501239478,  1501239523],
    [539,  541,  1501239536,  1501239581],
    [541,  543,  1501239593,  1501239638],
    [544,  546,  1501239651,  1501239695],
    [546,  547,  1501239708,  1501239728],
]

timestampListScan8 = [
    [561,  562,  1501240038,  1501240082],
    [563,  565,  1501240095,  1501240139],
    [565,  567,  1501240152,  1501240197],
    [568,  570,  1501240209,  1501240254],
    [570,  572,  1501240267,  1501240311],
    [573,  575,  1501240324,  1501240369],
    [575,  577,  1501240381,  1501240426],
    [578,  580,  1501240438,  1501240483],
    [580,  582,  1501240496,  1501240540],
    [583,  584,  1501240553,  1501240596],
    [585,  587,  1501240609,  1501240655],
    [587,  589,  1501240666,  1501240711],
    [590,  592,  1501240725,  1501240768],
    [592,  594,  1501240781,  1501240827],
    [595,  597,  1501240838,  1501240883],
    [597,  599,  1501240897,  1501240940],
    [600,  602,  1501240953,  1501240997],
    [602,  604,  1501241010,  1501241055],
    [605,  606,  1501241069,  1501241087],
]

timestampListScan9 = [
    [28,  29,  1501245625,  1501245654],
    [30,  31,  1501245664,  1501245692],
    [31,  32,  1501245702,  1501245731],
    [33,  34,  1501245740,  1501245769],
    [34,  36,  1501245779,  1501245808],
    [36,  37,  1501245817,  1501245846],
    [38,  39,  1501245856,  1501245884],
    [39,  41,  1501245894,  1501245924],
    [41,  42,  1501245934,  1501245961],
    [43,  44,  1501245972,  1501245999],
    [44,  46,  1501246010,  1501246039],
    [46,  47,  1501246049,  1501246077],
    [48,  49,  1501246087,  1501246116],
    [50,  51,  1501246138,  1501246167],
    [52,  53,  1501246177,  1501246205],
    [53,  54,  1501246215,  1501246244],
    [55,  56,  1501246254,  1501246282],
    [56,  58,  1501246292,  1501246321],
    [58,  59,  1501246330,  1501246359],
    [60,  61,  1501246369,  1501246399],
    [61,  63,  1501246407,  1501246436],
    [63,  64,  1501246447,  1501246474],
    [65,  66,  1501246485,  1501246514],
    [66,  68,  1501246522,  1501246551],
    [68,  69,  1501246562,  1501246582],
]

timestampListScan10 = [
    [ 83,   84,  1501246910,  1501246939],
    [ 85,   86,  1501246949,  1501246977],
    [ 86,   88,  1501246987,  1501247016],
    [ 88,   89,  1501247026,  1501247054],
    [ 90,   91,  1501247064,  1501247093],
    [ 91,   92,  1501247102,  1501247131],
    [ 93,   94,  1501247142,  1501247171],
    [ 95,   96,  1501247179,  1501247209],
    [ 96,   97,  1501247219,  1501247246],
    [ 98,   99,  1501247257,  1501247286],
    [100,  101,  1501247296,  1501247324],
    [101,  102,  1501247334,  1501247363],
    [103,  104,  1501247373,  1501247401],
    [104,  106,  1501247411,  1501247440],
    [106,  107,  1501247449,  1501247478],
    [108,  109,  1501247488,  1501247517],
    [109,  111,  1501247526,  1501247555],
    [111,  112,  1501247565,  1501247595],
    [113,  114,  1501247603,  1501247633],
    [114,  116,  1501247643,  1501247672],
    [116,  117,  1501247681,  1501247710],
    [118,  119,  1501247720,  1501247748],
    [119,  121,  1501247758,  1501247787],
    [121,  122,  1501247797,  1501247825],
    [123,  124,  1501247835,  1501247855],
]

timestampListScan11 = [
    [150,  151,  1501248473,  1501248501],
    [152,  153,  1501248511,  1501248540],
    [153,  155,  1501248550,  1501248578],
    [155,  156,  1501248588,  1501248617],
    [157,  158,  1501248628,  1501248655],
    [158,  160,  1501248665,  1501248695],
    [160,  161,  1501248705,  1501248732],
    [162,  163,  1501248743,  1501248772],
    [163,  164,  1501248781,  1501248810],
    [165,  166,  1501248820,  1501248848],
    [167,  168,  1501248858,  1501248887],
    [168,  169,  1501248897,  1501248925],
    [170,  171,  1501248935,  1501248964],
    [172,  173,  1501248974,  1501249002],
    [173,  174,  1501249012,  1501249041],
    [175,  176,  1501249050,  1501249079],
    [176,  178,  1501249089,  1501249117],
    [178,  179,  1501249127,  1501249157],
    [180,  181,  1501249167,  1501249194],
    [181,  183,  1501249205,  1501249234],
    [183,  184,  1501249242,  1501249272],
    [185,  186,  1501249282,  1501249311],
    [186,  188,  1501249320,  1501249349],
    [188,  189,  1501249359,  1501249387],
    [190,  191,  1501249397,  1501249417],
]

timestampListScan12 = [
    [208,  209,  1501249819,  1501249848],
    [209,  211,  1501249857,  1501249886],
    [211,  212,  1501249897,  1501249926],
    [213,  214,  1501249934,  1501249964],
    [214,  216,  1501249974,  1501250003],
    [216,  217,  1501250013,  1501250041],
    [218,  219,  1501250051,  1501250080],
    [219,  221,  1501250090,  1501250118],
    [221,  222,  1501250128,  1501250157],
    [223,  224,  1501250168,  1501250195],
    [224,  226,  1501250205,  1501250235],
    [226,  227,  1501250245,  1501250273],
    [228,  229,  1501250283,  1501250312],
    [229,  231,  1501250322,  1501250350],
    [231,  232,  1501250360,  1501250389],
    [233,  234,  1501250399,  1501250427],
    [234,  236,  1501250437,  1501250466],
    [236,  237,  1501250476,  1501250504],
    [238,  239,  1501250514,  1501250544],
    [239,  241,  1501250554,  1501250583],
    [241,  242,  1501250592,  1501250621],
    [243,  244,  1501250631,  1501250659],
    [244,  245,  1501250669,  1501250698],
    [246,  247,  1501250708,  1501250737],
    [248,  248,  1501250746,  1501250748],
]

timestampListScan13 = [
    [382,  384,  1501269856,  1501269885],
    [384,  385,  1501269895,  1501269923],
    [386,  387,  1501269933,  1501269962],
    [387,  388,  1501269971,  1501270000],
    [389,  390,  1501270010,  1501270040],
    [391,  392,  1501270048,  1501270077],
    [392,  393,  1501270086,  1501270115],
    [394,  395,  1501270125,  1501270155],
    [395,  397,  1501270163,  1501270193],
    [397,  398,  1501270203,  1501270232],
    [399,  400,  1501270241,  1501270270],
    [400,  402,  1501270280,  1501270308],
    [402,  403,  1501270318,  1501270347],
    [404,  405,  1501270357,  1501270385],
    [405,  407,  1501270395,  1501270424],
    [407,  408,  1501270433,  1501270462],
    [409,  410,  1501270472,  1501270500],
    [410,  412,  1501270510,  1501270539],
    [412,  413,  1501270549,  1501270577],
    [414,  415,  1501270587,  1501270616],
    [415,  417,  1501270627,  1501270654],
    [417,  418,  1501270664,  1501270694],
    [419,  420,  1501270702,  1501270732],
    [420,  422,  1501270742,  1501270771],
    [422,  423,  1501270780,  1501270800],
]

timestampListScan14 = [
    [431,  433,  1501271000,  1501271027],
    [433,  434,  1501271038,  1501271067],
    [435,  436,  1501271077,  1501271105],
    [436,  438,  1501271115,  1501271144],
    [438,  439,  1501271154,  1501271182],
    [440,  441,  1501271192,  1501271221],
    [441,  442,  1501271231,  1501271259],
    [443,  444,  1501271269,  1501271298],
    [445,  446,  1501271308,  1501271336],
    [446,  447,  1501271346,  1501271376],
    [448,  449,  1501271386,  1501271413],
    [450,  451,  1501271424,  1501271453],
    [451,  452,  1501271461,  1501271491],
    [453,  454,  1501271501,  1501271530],
    [455,  456,  1501271540,  1501271568],
    [456,  457,  1501271578,  1501271607],
    [458,  459,  1501271617,  1501271645],
    [459,  461,  1501271655,  1501271684],
    [461,  462,  1501271695,  1501271722],
    [463,  464,  1501271732,  1501271762],
    [464,  466,  1501271772,  1501271800],
    [466,  467,  1501271810,  1501271839],
    [468,  469,  1501271849,  1501271877],
    [469,  471,  1501271887,  1501271916],
    [471,  472,  1501271926,  1501271945],
]

runs2017 = [
    ['300019', [ 
                 #['Scan1', timestampListScan1],
                 ['Scan2', timestampListScan2],
                 ['Scan3', timestampListScan3],
                 ['Scan4', timestampListScan4],
                 ['Scan5', timestampListScan5],
                 ['Scan6', timestampListScan6],
                 ['Scan7', timestampListScan7],
                 ['Scan8', timestampListScan8]
               ]
    ]
#    ['300029', [ 
#                 ['Scan9' , timestampListScan9 ],
#                 ['Scan10', timestampListScan10],
#                 ['Scan11', timestampListScan11],
#                 ['Scan12', timestampListScan12]
#    ],
#    ['300050', [ 
#                 ['Scan13', timestampListScan13],
#                 ['Scan14', timestampListScan14]
#    ]
]


################
##### MAIN #####
################

### Datasets and runs
datasets2017 = [
    '/ZeroBias1/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias2/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias3/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias4/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias5/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias6/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias7/Run2017C-09Aug2019_UL2017-v1/AOD',
    '/ZeroBias8/Run2017C-09Aug2019_UL2017-v1/AOD',
]

# Loop on runs
for run in runs2017:
    print 'Run:', run[0]
 
    # Filter files that contain this run from all datasets
    allfiles = []   
    for dataset in datasets2017:
        print '  Doing dataset:', dataset

        command = 'dasgoclient -query="file dataset=%s run=%s" ' % (dataset,run[0])
        tmp_files = os.popen(command).read()
        tmp_files = tmp_files.split('\n')
        print '   tmp files:', len(tmp_files)
        allfiles += tmp_files

    print '  Tot files Before cleaning:', len(allfiles)

    # Now filter files that contain interesting lumis
    for lumiRange in run[1]:
        LsTimestampList = lumiRange[1] # List of timestamps and corresponding LSs

        # Write the selected files in a .py file as a python list
        fout = open('filelist_2017_Run'+run[0]+'_'+lumiRange[0]+'_timestamps.py','w')

        # Loop on all timestamps to get the files to be saved
        for timestamp in LsTimestampList:
            beginLS   = timestamp[0]
            endLS     = timestamp[1]
            beginTime = timestamp[2]
            endTime   = timestamp[3]

            newfiles = []
            for file in allfiles:

                if len(file) == 0: continue
                command = 'dasgoclient -query="lumi file=%s run=%s" ' % (file,run[0])
                stringLS = os.popen(command).read().strip() # string cotaining all the LS in the file
                if 'ERROR' in stringLS:
                    print 'ERROR for file:', file, ' --> skipping!'
                    continue
                LSs = getLSlist(stringLS)

                # Check if ANY of the LS in the file is a 'good' one so the file must be saved
                goodfile = False
                for ls in LSs:
                    if ls >= beginLS and ls <= endLS:
                        goodfile = True

                if goodfile:
                    newfiles.append(file)

            print '      Files after cleaning for this timestamp:', len(newfiles), ' at:', datetime.datetime.now()

            # Create a list of good files for each timestamp
            fout.write('\n')
            fout.write('file_list_%s_%s = [\n' % (beginTime, endTime) )
            for file in newfiles:
                fout.write('\'file:/eos/cms%s\',\n' % file )
            fout.write(']\n')

        # Close file at the end of the Scan
        fout.close()

#import pdb; pdb.set_trace()


